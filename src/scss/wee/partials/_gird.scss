@charset "UTF-8";

// ==========================================================================
// Wee â€“ Grid
// ==========================================================================

$columns: 24;

.#{$prefix}-row::after {
  clear: both;
  content: "";
  display: table;
}

.#{$prefix}-row {
  position: relative;
  @include margin-all(null, -$base-gap, null, -$base-gap);
}

.#{$prefix}-gird-md {
  width:$screen-md;
}
.#{$prefix}-gird-hd {
  width:$screen-hd;
}

// Mobile Container
.#{$prefix}-container {
  @include padding-all(null, $base-gap, null, $base-gap);
  @include center-block;
}
.#{$prefix}-container-full {
  @include padding-all(null, 0, null, 0);
  @include center-block;
}

// Tablet Container
@include min-screen($breakpoint-sm) {
  .#{$prefix}-container, .#{$prefix}-container-full {
    width: $screen-sm;
  }
  .#{$prefix}-container-sm {
    width: $screen-sm;
    @include padding-all(null, $base-gap, null, $base-gap);
    @include center-block;
  }
  .#{$prefix}-container-full-sm {
    width: $screen-sm;
    @include padding-all(null, 0, null, 0);
    @include center-block;
  }
}

// Desktop Container
@include min-screen($breakpoint-md) {
  .#{$prefix}-container, .#{$prefix}-container-full {
    width: $screen-md;
  }
  .#{$prefix}-container-md {
    width: $screen-md;
    @include padding-all(null, $base-gap, null, $base-gap);
    @include center-block;
  }
  .#{$prefix}-container-full-md {
    width: $screen-md;
    @include padding-all(null, 0, null, 0);
    @include center-block;
  }
}

// HD Container
@include min-screen($breakpoint-hd) {
  .#{$prefix}-container, .#{$prefix}-container-full {
    width: $screen-hd;
  }
  .#{$prefix}-container-hd {
    width: $screen-hd;
    @include padding-all(null, $base-gap, null, $base-gap);
    @include center-block;
  }
  .#{$prefix}-container-full-hd {
    width: $screen-hd;
    @include padding-all(null, 0, null, 0);
    @include center-block;
  }
}
@for $i from 1 through $columns {
  .#{$prefix}-col-#{$i} {
    @include padding-all(null, $base-gap, null, $base-gap);
    position: relative;
    float: left;
  }
}

// Mobile  Gri
@for $i from 1 through $columns {
  .#{$prefix}-col-#{$i} {
    width: ($i / $columns) * 100%;
  }
}

// Mobile Push Offsets
@for $i from 1 through $columns - 1 {
  .#{$prefix}-col-push-#{$i} {
    left: ($i / $columns) * 100%;
  }
}

// Mobile Pull Offsets
@for $i from 1 through $columns - 1 {
  .#{$prefix}-col-pull-#{$i} {
    left: -($i / $columns) * 100%;
  }
}

// Tablet Grid
@include min-screen($breakpoint-sm) {
  // Tablet Grid Columns
  @for $i from 1 through $columns {
    .#{$prefix}-col-#{$i}-sm {
      @include padding-all(null, $base-gap, null, $base-gap);
      position: relative;
      float: left;
    }
  }

  // Tablet Grid
  @for $i from 1 through $columns {
    .#{$prefix}-col-#{$i}-sm {
      width: ($i / $columns) * 100%;
    }
  }

  // Tablet Push Offsets
  @for $i from 1 through $columns - 1 {
    .#{$prefix}-col-push-#{$i}-sm {
      left: ($i / $columns) * 100%;
    }
  }

  // Tablet Pull Offsets
  @for $i from 1 through $columns - 1 {
    .#{$prefix}-col-pull-#{$i}-sm {
      left: -($i / $columns) * 100%;
    }
  }
}

// Desktop Grid
@include min-screen($breakpoint-md) {

  // Desktop Grid Columns
  @for $i from 1 through $columns {
    .#{$prefix}-col-#{$i}-md {
      @include padding-all(null, $base-gap, null, $base-gap);
      position: relative;
      float: left;
    }
  }

  // Desktop Grid
  @for $i from 1 through $columns {
    .#{$prefix}-col-#{$i}-md {
      width: ($i / $columns) * 100%;
    }
  }

  // Desktop Push Offsets
  @for $i from 1 through $columns - 1 {
    .#{$prefix}-col-push-#{$i}-md {
      left: ($i / $columns) * 100%;
    }
  }

  // Desktop Pull Offsets
  @for $i from 1 through $columns - 1 {
    .#{$prefix}-col-pull-#{$i}-md {
      left: -($i / $columns) * 100%;
    }
  }
}

// HD Grid
@include min-screen($breakpoint-hd) {

  // HD Grid Columns
  @for $i from 1 through $columns {
    .#{$prefix}-col-#{$i}-hd {
      @include padding-all(null, $base-gap, null, $base-gap);
      position: relative;
      float: left;
    }
  }

  // HD Grid
  @for $i from 1 through $columns {
    .#{$prefix}-col-#{$i}-hd {
      width: ($i / $columns) * 100%;
    }
  }

  // HD Push Offsets
  @for $i from 1 through $columns - 1 {
    .#{$prefix}-col-push-#{$i}-hd {
      left: ($i / $columns) * 100%;
    }
  }

  // HD Pull Offsets
  @for $i from 1 through $columns - 1 {
    .#{$prefix}-col-pull-#{$i}-hd {
      left: -($i / $columns) * 100%;
    }
  }
}
